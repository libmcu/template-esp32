name: Static analysis

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]

jobs:
  static-analysis:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Static Analysis
    runs-on: ubuntu-latest
    container: espressif/idf:v5.0.2
    steps:
      - name: Prepare
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Recognize SHA
        id: sharef
        run: |
          echo ${{ github.event_name }}
          echo ${{ github.event.pull_request.head.sha }}

          if [ ${{ github.event_name }} == 'pull_request' ]
          then
            echo "SHA_REF=$(echo ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT
          elif [ ${{ github.event_name }} == 'workflow_run' ]
          then
            echo "SHA_REF=$(echo ${{ github.event.workflow_run.head_sha }})" >> $GITHUB_OUTPUT
          else
            echo "SHA_REF=$(echo ${{ github.sha }})" >> $GITHUB_OUTPUT
          fi
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          name: build_result-${{ steps.sharef.outputs.SHA_REF }}
          path: build
      - name: Set Workflow Context
        id: workflow_context
        run: |
          echo "ISSUE_NUMBER=$(cat build/issue_number)" >> $GITHUB_OUTPUT
          echo "EVENT_NAME=$(cat build/event_name)" >> $GITHUB_OUTPUT
      - name: Analysis
        id: analysis
        continue-on-error: true
        run: |
          $IDF_PATH/tools/idf_tools.py install xtensa-clang
          . $IDF_PATH/export.sh
          pip3 install codechecker
          sed -i 's/-fno-tree-switch-conversion//g' build/compile_commands.json
          sed -i 's/-fstrict-volatile-bitfields//g' build/compile_commands.json
          CodeChecker analyze ./build/compile_commands.json --enable sensitive --output ./reports --ignore .codechecker.exclude
          CodeChecker parse reports > codechecker.output
          echo "REPORT_TEXT=$(cat codechecker.output)" >> $GITHUB_OUTPUT
      - name: Comment
        if: ${{ steps.workflow_context.outputs.EVENT_NAME == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: Number(${{ steps.workflow_context.outputs.ISSUE_NUMBER }}),
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.analysis.outputs.REPORT_TEXT }}
            })
      - name: Cleanup
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            res.data.artifacts
              .filter(({ name }) => name === 'build_result-${{ steps.sharef.outputs.SHA_REF }}')
              .forEach(({ id }) => {
                github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: id,
                })
              })
