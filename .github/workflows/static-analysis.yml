name: Static analysis

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]

jobs:
  static-analysis:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Static Analysis
    runs-on: ubuntu-latest
    container: espressif/idf:v5.0.2
    steps:
      - name: Prepare
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          name: build_result-${{ github.sha }}
          path: build
      - name: Analysis
        id: analysis
        continue-on-error: true
        run: |
          $IDF_PATH/tools/idf_tools.py install xtensa-clang
          . $IDF_PATH/export.sh
          pip3 install codechecker
          sed -i 's/-fno-tree-switch-conversion//g' build/compile_commands.json
          sed -i 's/-fstrict-volatile-bitfields//g' build/compile_commands.json
          CodeChecker analyze ./build/compile_commands.json --enable sensitive --output ./reports --ignore .codechecker.exclude
          CodeChecker parse reports > codechecker.output
          echo "REPORT_TEXT=$(cat codechecker.output)" >> $GITHUB_OUTPUT
      - name: Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.analysis.outputs.REPORT_TEXT }}
            })
      - name: Cleanup
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            res.data.artifacts
              .filter(({ name }) => name === 'build_result-${{ github.sha }}')
              .forEach(({ id }) => {
                github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: id,
                })
              })
